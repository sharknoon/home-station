{"version":3,"file":"db-cvVcOA05.js","sources":["../../../.svelte-kit/adapter-node/chunks/environment.js","../../../.svelte-kit/adapter-node/chunks/db.js"],"sourcesContent":["let building = false;\nlet prerendering = false;\nfunction set_building() {\n  building = true;\n}\nfunction set_prerendering() {\n  prerendering = true;\n}\nexport {\n  set_prerendering as a,\n  building as b,\n  prerendering as p,\n  set_building as s\n};\n","import path from \"node:path\";\nimport { drizzle } from \"drizzle-orm/better-sqlite3\";\nimport { migrate } from \"drizzle-orm/better-sqlite3/migrator\";\nimport DatabaseConstructor from \"better-sqlite3\";\nimport { sqliteTable, text, integer, primaryKey, foreignKey } from \"drizzle-orm/sqlite-core\";\nimport { relations } from \"drizzle-orm\";\nimport { a as getAppDataPersistency, l as logger } from \"./appdata.js\";\nimport { b as building } from \"./environment.js\";\nconst users = sqliteTable(\"users\", {\n  id: text(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  hashedPassword: text(\"hashed_password\").notNull(),\n  language: text(\"language\").notNull().default(\"en\"),\n  theme: text(\"theme\", {\n    enum: [\n      \"skeleton\",\n      \"wintry\",\n      \"modern\",\n      \"rocket\",\n      \"seafoam\",\n      \"vintage\",\n      \"sahara\",\n      \"hamlindigo\",\n      \"gold-nouveau\",\n      \"crimson\"\n    ]\n  }).notNull().default(\"skeleton\")\n});\nconst sessions = sqliteTable(\"user_sessions\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  expiresAt: integer(\"expires_at\").notNull()\n});\nconst containerEngines = sqliteTable(\"container_engines\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  name: text(\"name\").notNull().unique(),\n  type: text(\"type\", { enum: [\"local\", \"remote\"] }).notNull(),\n  socketPath: text(\"socket_path\"),\n  host: text(\"host\"),\n  ca: text(\"ca\"),\n  cert: text(\"cert\"),\n  key: text(\"key\")\n});\nconst marketplaces = sqliteTable(\"marketplaces\", {\n  id: text(\"id\").primaryKey(),\n  gitRemoteUrl: text(\"git_remote_url\").notNull().unique(),\n  gitUsername: text(\"git_username\"),\n  gitPassword: text(\"git_password\")\n});\nconst marketplaceApps = sqliteTable(\n  \"marketplace_apps\",\n  {\n    appId: text(\"app_id\").notNull(),\n    marketplaceId: text(\"marketplace_id\").notNull().references(() => marketplaces.id, { onDelete: \"cascade\" }),\n    name: text(\"name\", { mode: \"json\" }).notNull().$type(),\n    description: text(\"description\", { mode: \"json\" }).notNull().$type(),\n    icon: text(\"icon\").notNull(),\n    banner: text(\"banner\"),\n    links: text(\"links\", { mode: \"json\" }).notNull().$type(),\n    publishedAt: text(\"published_at\").notNull(),\n    developer: text(\"developer\").notNull(),\n    category: text(\"category\", { enum: [\"File Transfer - Web-based File Managers\"] }).notNull(),\n    //TODO: Add more categories from awesome-selfhosted\n    config: text(\"config\", { mode: \"json\" }).$type(),\n    http: text(\"http\", { mode: \"json\" }).notNull().$type(),\n    messages: text(\"messages\", { mode: \"json\" }).$type()\n  },\n  (table) => {\n    return {\n      pk: primaryKey({ columns: [table.appId, table.marketplaceId] })\n    };\n  }\n);\nconst marketplaceAppsRelations = relations(marketplaceApps, ({ one }) => ({\n  marketplace: one(marketplaces, {\n    fields: [marketplaceApps.marketplaceId],\n    references: [marketplaces.id]\n  })\n}));\nconst hostnames = sqliteTable(\"hostnames\", {\n  host: text(\"host\").primaryKey()\n});\nconst apps = sqliteTable(\n  \"apps\",\n  {\n    appId: text(\"app_id\").notNull(),\n    marketplaceId: text(\"marketplace_id\").notNull(),\n    containerEngineId: integer(\"container_engine_id\").notNull().references(() => containerEngines.id, { onDelete: \"cascade\" }),\n    installedAt: integer(\"installed_at\").notNull()\n  },\n  (table) => {\n    return {\n      pk: primaryKey({ columns: [table.appId, table.marketplaceId] }),\n      marketplaceAppReference: foreignKey({\n        columns: [table.appId, table.marketplaceId],\n        foreignColumns: [marketplaceApps.appId, marketplaceApps.marketplaceId],\n        name: \"marketplace_app_reference\"\n        // onDelete: 'cascade' // once it is supported by drizzle-orm\n      })\n    };\n  }\n);\nconst appsRelations = relations(apps, ({ one }) => ({\n  marketplaceApp: one(marketplaceApps, {\n    fields: [apps.appId, apps.marketplaceId],\n    references: [marketplaceApps.appId, marketplaceApps.marketplaceId]\n  })\n}));\nconst schema = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  apps,\n  appsRelations,\n  containerEngines,\n  hostnames,\n  marketplaceApps,\n  marketplaceAppsRelations,\n  marketplaces,\n  sessions,\n  users\n}, Symbol.toStringTag, { value: \"Module\" }));\nlet sqlite;\nlet db;\nconst testing = process.env.NODE_ENV === \"test\";\ntry {\n  const appDataPersitency = await getAppDataPersistency();\n  if (appDataPersitency.isPersistent && !building && !testing) {\n    const databasePath = path.join(appDataPersitency.currentAppDataPath, \"db.sqlite\");\n    logger.info(`Connecting to the database \"${databasePath}\"`);\n    sqlite = new DatabaseConstructor(databasePath);\n  } else {\n    sqlite = new DatabaseConstructor(\":memory:\");\n    logger.info(\"Connecting to the database in memory\");\n    if (!building && !testing) {\n      logger.warn(\"All data will be lost when the server stops!\");\n    }\n  }\n  db = drizzle(sqlite, { schema });\n  logger.info(\"Successfully connected to the database\");\n  logger.info(\"Running migrations\");\n  migrate(db, { migrationsFolder: \"drizzle\" });\n  logger.info(\"Migrations completed\");\n} catch (error) {\n  logger.error(\"Failed to connect to the database: \" + error);\n  process.exit(1);\n}\ntry {\n  if (!await db.query.users.findFirst()) {\n    logger.info(\"Seeding the database\");\n    if (!await db.query.marketplaces.findFirst()) {\n      await db.insert(marketplaces).values({\n        id: \"github-com-home-station-org-apps\",\n        gitRemoteUrl: \"https://github.com/home-station-org/apps.git\",\n        // TODO remove username and token once public\n        gitUsername: \"Sharknoon\",\n        gitPassword: \"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\"\n      });\n    }\n    logger.info(\"Successfully seeded the database\");\n  }\n} catch (error) {\n  logger.error(\"Failed to seed the database: \" + error);\n}\nconst db$1 = db;\nexport {\n  apps as a,\n  marketplaces as b,\n  containerEngines as c,\n  db$1 as d,\n  hostnames as h,\n  marketplaceApps as m,\n  sessions as s,\n  users as u\n};\n"],"names":[],"mappings":"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"}