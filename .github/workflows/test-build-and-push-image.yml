name: "[HOME-STATION] Test, build and push image"

# This action is heavily inspired from
# https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners

permissions:
    contents: read
    packages: write

on:
    workflow_dispatch:

env:
    REGISTRY_IMAGE: ghcr.io/${{ github.repository }}

jobs:
    test:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 21

            - name: Install dependencies
              run: npm ci

            - name: Install Playwright Browsers
              run: npx playwright install --with-deps

            - name: Run tests
              run: npm -w home-station run test

            - uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30

    build:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        needs: test
        strategy:
            fail-fast: false
            matrix:
              platform:
                  - linux/amd64
                  - linux/arm/v6
                  - linux/arm/v7
                  - linux/arm64
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY_IMAGE }}
                  tags: | # set latest tag for default branch
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
    
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Github Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push by digest
              id: build
              uses: docker/build-push-action@v5
              with:
                  file: docker/home-station.Dockerfile
                  platforms: ${{ matrix.platform }}
                  build-args: COMMIT_HASH=${{ github.sha }}
                  labels: ${{ steps.meta.outputs.labels }}
                  outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

            - name: Export digest
              run: |
                  mkdir -p /tmp/digests
                  digest="${{ steps.build.outputs.digest }}"
                  touch "/tmp/digests/${digest#sha256:}"   
                  
            - name: Upload digest
              uses: actions/upload-artifact@v4
              with:
                  name: digests-${{ env.PLATFORM_PAIR }}
                  path: /tmp/digests/*
                  if-no-files-found: error
                  retention-days: 1
                  
    push:
        runs-on: ubuntu-latest
        needs:
            - build
        steps:
            - name: Download digests
              uses: actions/download-artifact@v4
              with:
                  path: /tmp/digests
                  pattern: digests-*
                  merge-multiple: true
                  
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY_IMAGE }}
                  
            - name: Login to Github Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
                  
            - name: Create manifest list and push
              working-directory: /tmp/digests
              run: |
                  docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
                      $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)  
                      
            - name: Inspect image
              run: |
                  docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}          
